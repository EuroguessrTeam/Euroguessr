// <auto-generated />
using Euroguessr.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace Euroguessr.Migrations
{
    [DbContext(typeof(EntityContext))]
    partial class EntityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Euroguessr.Data.Tables.Score", b =>
                {
                    b.Property<string>("Userunique_token")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<int>("attempts")
                        .HasColumnType("integer");

                    b.Property<bool>("win")
                        .HasColumnType("boolean");

                    b.HasKey("Userunique_token", "date");

                    b.ToTable("Score");

                    b.HasData(
                        new
                        {
                            Userunique_token = "56489489185616",
                            date = new DateOnly(2023, 10, 7),
                            attempts = 3,
                            win = true
                        });
                });

            modelBuilder.Entity("Euroguessr.Data.Tables.TodayGuessNumber", b =>
                {
                    b.Property<DateOnly>("guess_date")
                        .HasColumnType("date");

                    b.Property<int>("today_guess_id")
                        .HasColumnType("integer");

                    b.HasKey("guess_date");

                    b.ToTable("TodayGuessNumber");
                });

            modelBuilder.Entity("Euroguessr.Data.Tables.TodayGuessNumberRange", b =>
                {
                    b.Property<int>("min_value")
                        .HasColumnType("integer");

                    b.Property<int>("max_value")
                        .HasColumnType("integer");

                    b.HasKey("min_value", "max_value");

                    b.ToTable("TodayGuessNumberRange");

                    b.HasData(
                        new
                        {
                            min_value = 503,
                            max_value = 528
                        });
                });

            modelBuilder.Entity("Euroguessr.Data.Tables.User", b =>
                {
                    b.Property<string>("unique_token")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)");

                    b.HasKey("unique_token");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            unique_token = "56489489185616"
                        });
                });

            modelBuilder.Entity("Euroguessr.Data.Tables.Score", b =>
                {
                    b.HasOne("Euroguessr.Data.Tables.User", null)
                        .WithMany("scores")
                        .HasForeignKey("Userunique_token")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Euroguessr.Data.Tables.User", b =>
                {
                    b.Navigation("scores");
                });
#pragma warning restore 612, 618
        }
    }
}
